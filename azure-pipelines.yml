# ASP.NET Core
# Build and test ASP.NET Core projects targeting .NET Core.
# Add steps that run tests, create a NuGet package, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
- master

pool:
  vmImage: 'ubuntu-16.04' #imagen anterior

variables:
  buildConfiguration: 'Release'

steps:
- task: UseDotNet@2
  inputs:
    version: '3.0.x'
- task: UseDotNet@2
  inputs:
    version: '2.2.x'
    packageType: runtime
- task: DotNetCoreCLI@2
  displayName: Build
  inputs:
    command: build
    projects: '**/*.csproj'
    arguments: '--configuration Release'
- task: DotNetCoreCLI@2
  inputs:
    command: test
    projects: '**/*Tests/*.csproj'
    arguments: '--configuration $(buildConfiguration)'
- task: DotNetCoreCLI@2
  inputs:
    command: publish
    publishWebProjects: True
    arguments: '--configuration $(BuildConfiguration) --output $(Build.ArtifactStagingDirectory)'
    zipAfterPublish: True

# this code takes all the files in $(Build.ArtifactStagingDirectory) and uploads them as an artifact of your build.
- task: PublishBuildArtifacts@1
  inputs:
    pathtoPublish: '$(Build.ArtifactStagingDirectory)' 
    artifactName: 'drop1'
- task: AzureWebApp@1
  inputs:
    azureSubscription: 'Azure Pass - Sponsorship (9c9582dc-5669-418b-82a7-01f27fdf718a)'
    appType: 'webAppLinux'
    appName: 'miwebappoga1232'
    package: '$(System.DefaultWorkingDirectory)/**/*.zip'
    runtimeStack: 'DOTNETCORE|2.1'
    appSettings: '-MyDbConnection "Server=tcp:myserveroga123.database.windows.net,1433;Initial Catalog=mydb1;Persist Security Info=False;User ID=sqluser;Password={your_password};MultipleActiveResultSets=False;Encrypt=True;TrustServerCertificate=False;Connection Timeout=30;"'